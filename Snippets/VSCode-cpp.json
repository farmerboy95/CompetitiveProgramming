{
    "CP Starter": {
        "prefix": "zzCPStarter",
        "body": [
            "/*",
            "    Author: Nguyen Tan Bao",
            "    Status:",
            "    Idea:",
            "*/",
            "",
            "#include <bits/stdc++.h>",
            "#define FI first",
            "#define SE second",
            "#define EPS 1e-9",
            "#define ALL(a) a.begin(),a.end()",
            "#define SZ(a) int((a).size())",
            "#define MS(s, n) memset(s, n, sizeof(s))",
            "#define FOR(i,a,b) for (int i = (a); i <= (b); i++)",
            "#define FORE(i,a,b) for (int i = (a); i >= (b); i--)",
            "#define FORALL(it, a) for (__typeof((a).begin()) it = (a).begin(); it != (a).end(); it++)",
            "//__builtin_ffs(x) return 1 + index of least significant 1-bit of x",
            "//__builtin_clz(x) return number of leading zeros of x",
            "//__builtin_ctz(x) return number of trailing zeros of x",
            "",
            "using namespace std;",
            "using ll = long long;",
            "using ld = double;",
            "typedef pair<int, int> II;",
            "typedef pair<II, int> III;",
            "typedef complex<ld> cd;",
            "typedef vector<cd> vcd;",
            "",
            "const ll MODBASE = 1000000007LL;",
            "const int MAXN = 110;",
            "const int MAXM = 1000;",
            "const int MAXK = 16;",
            "const int MAXQ = 200010;",
            "",
            "int main() {",
            "    ios::sync_with_stdio(0);",
            "    cin.tie(nullptr);",
            "    return 0;",
            "}",
            ""
        ],
        "description": "CP Starter"
    },
    "GCD Function": {
        "prefix": "zzGCDFunction",
        "body": [
            "int gcd(int a, int b) {",
            "    while (b) {",
            "        a %= b;",
            "        swap(a, b);",
            "    }",
            "    return a;",
            "}"
        ],
        "description": "GCD Function"
    },
    "Sieve of Eratosthenes": {
        "prefix": "zzSieveBase",
        "body": [
            "void sieveBase(int n) {",
            "    FOR(i,2,n) {",
            "        if (nt[i] == 0) {",
            "            nt[i] = i;",
            "            for (ll j = (ll) i * i; j <= n; j += i) nt[j] = i;",
            "        }",
            "    }",
            "}"
        ],
        "description": "Sieve of Eratosthenes"
    },
    "Binary Exponentiation": {
        "prefix": "zzBinPowMod",
        "body": [
          "ll binPowMod(ll a, ll b, ll m) {",
          "    a %= m;",
          "    ll res = 1;",
          "    while (b > 0) {",
          "        if (b & 1LL) res = res * a % m;",
          "        a = a * a % m;",
          "        b >>= 1LL;",
          "    }",
          "    return res;",
          "}"
        ],
        "description": "Binary Exponentiation"
    }
}